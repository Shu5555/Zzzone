ガチャ 昇格機能
ベースのレアリティ確率をそのまま採用し、昇格（アップグレード）抽選の仕様と「推奨昇格確率例／最終的な期待出現率の概算」を、コードなしで整理してお送りします。 ※色指定は入れず、演出・設計・データ構造面にフォーカスしています。この昇格機能を実装するためのロードマップを正確かつ詳細に構築し、先ほどのようにマークダウン形式でファイルを出力してください。
前提（ユーザー提供のベース確率）
* コモン: 73.4%
* レア: 20.0%
* 激レア: 5.0%
* 超激レア: 1.0%
* OWN_CHIN: 0.6%
このベース確率（「抽選直後に確定する初期レアリティ」）を出発点に、必要に応じて昇格抽選を行う想定です。
昇格抽選の基本仕様（設計方針）
目的
* 演出的に「一瞬の発光→ぼやけ→静まるとレアリティが上がっている」と感じさせる。
* 昇格の頻度は「特別感」を保てる程度にし、過度に多発しないように設計する。
* 将来的に昇格ロジックや演出を差し替えやすいよう、抽選ロジックと演出ロジックは分離する。
運用ルール（推奨）
1. 昇格は「1回の表示対象につき最大1段階まで（single-step）」を基本とする。
   * 例：R → SR、SR → 激（＝1段階）
   * 二段階（R→SR→SSR）を同時に許すと極端にレア出現率が変わりやすくなるため、まずは単段階を推奨。
2. 昇格判定は抽選本体（サーバー）で行い、クライアントには「昇格フラグ」を渡す方式を推奨。
   * これにより不正防止・デバッグが容易になる。
   * ただし、簡易実装であればクライアント側での昇格判定（デバッグ用）も可能にしておくと便利。
3. 演出側（クライアント）は「見せかけの初期表示→予兆→（フラグがあれば）昇格演出→確定表示」の流れを読むだけにする。
   * 演出コンポーネントは「昇格フラグあり/なし」で分岐して再生するだけにしておくと拡張が容易。
4. 昇格トリガーは主要に「玉をカメラがフォーカスした瞬間」を推奨（演出的に自然）。
   * 他に「一定時間後」「ユーザーの追加タップ」など複数トリガーを設計できるようにする。
昇格抽選の設計パターン（運用方式）
A. 先に昇格を含めて最終レアリティを決める方式（サーバー最終決定）
* サーバーで「最終確定レアリティ」を決定しておき、クライアントには表示用の“仮（見せかけ）レア”と“最終レア”の両方を渡す。
* 利点：不正防止、最終確率の正確性が担保される。
* 演出は最終レアに合わせて昇格演出を再生するか否かを判断する。
B. 初期抽選を行い、演出中に昇格判定を行う方式（演出トリガーで再判定）
* 初期に仮のレアを表示。演出中（例：カメラフォーカス）に別途昇格確率で再抽選を行う。
* 利点：演出の自由度が高い（ユーザー操作で昇格トリガーを作れる）。
* 注意：サーバー側整合性や不正対策を別途考える必要がある。
※推奨は A（サーバー最終決定）。運営上の透明性・公平性を保ちやすいため。
昇格確率（推奨値）と、その場合の概算最終出現率
以下は単段階昇格（base → next） を採る前提の「推奨昇格確率」と、それを適用したときの概算の最終期待出現率です。 （計算モデル：まずベースで抽選、続けてベースから「次の階級へ昇格」する確率を適用。1アイテムにつき最大1段階のみ移動）
推奨昇格確率（設計例）
* コモン → レア（R→SR）: 2.0%
* レア → 激レア (R→激): 1.0%
* 激レア → 超激レア: 0.2%
* 超激レア → OWN_CHIN: 0.05%
* OWN_CHIN（最上位）: 昇格なし
補足：これらは「特別感」を残すために低めに設定した例です。運用上は緩め／厳しめに調整可能です。
このモデルでの概算・期待最終出現率（単位：%）
計算は「ベース確率 × (1 − 昇格率)」がその階級に残る分、次の階級には「ベース確率 × 昇格率」が追加される前提。
1. コモン（最終） = 73.4% × (1 − 0.02) = 71.93%
2. レア（最終） = ベースのレアが残る分 + コモンから昇格してくる分 = 20.0% × (1 − 0.01) + 73.4% × 0.02 = 19.80% + 1.468% = 21.27%
3. 激レア（最終） = 5.0% × (1 − 0.002) + 20.0% × 0.01 = 4.99% + 0.20% = 5.19%
4. 超激レア（最終） = 1.0% × (1 − 0.0005) + 5.0% × 0.002 = 0.9995% + 0.01% = 1.0095% → 約 1.01%
5. OWN_CHIN（最終） = 0.6%（ベース。最上位のため昇格受取は超激レアからの少量のみ） = 0.6% + 1.0% × 0.0005 = 0.6% + 0.0005% = 0.6005%
（合計は概算でおよそ100%となる想定）
注：上記は単段階昇格前提の近似値です。二段階昇格を許すと分布が大きく変化するため、まずは単段階で運用し、必要に応じて拡張するのを推奨します。
設定例（運用上の推奨パラメータ）
* 昇格最大段階：1段階（拡張時に2段階をオプション化）
* 昇格判定タイミング：サーバーで判定 → クライアントにフラグ渡し
* 昇格トリガー（演出）：カメラフォーカス時に演出再生
* 昇格演出頻度のガード：
   * 一回のガチャ内で昇格表示が出過ぎないように、1ガチャ内最大の昇格演出回数を設定（例：10連中最大3回）
   * または、ユーザー別に昇格確率の累積制御を設ける（必要なら）
UX上の注意点（演出と期待値管理）
* プレイヤーに誤認させない表現：昇格は演出的要素だが、最終的な確率は運営方針で定義する。利用規約やFAQで「演出は最終結果の見せ方であり、確率は別途公表の通り」と明確にしておくのが望ましい。
* 昇格の“特別感”を維持：昇格はレアイベントなので、昇格確率は低めにし、発生時の演出を強める（音・光・一瞬のスロー等）。
* デバッグ用の強制フラグ：開発中・審査中の検証しやすさのために、昇格発生を強制するモードを用意しておく（ただし本番では無効化）。
拡張案（将来的に検討できること）
* **段階型昇格（2段階）**の導入（R→SR→SSR）を行う場合は、昇格確率の設計を再計算し、最終総合確率が狙いの値になるように調整する必要があります。
* 保護機能（ピティ）：確率上、ユーザーが一定回数以下でレア未取得の場合に昇格確率を上げる「天井や確率補正」を検討可能。
* 演出派生：昇格種別に応じて別の演出分岐（小昇格は小さな閃光、大昇格はスローモーション＋大爆発）を用意して感情を差別化。